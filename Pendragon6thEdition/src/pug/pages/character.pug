.character.grid
  .grid.info
    .col.img
      img.logo.knight(alt="King Arthur Pendragon Knight's Character Sheet" src=`${imageSource}/pendragonlogo.png`)
    .col
      .personal-data
        .header
          h1(data-i18n='personal data')
        .grid.2column.age
          .col.2autocolumn
            h2(data-i18n='name')
            +textInput('name')
          .col.2autocolumn
            h2(data-i18n='age')
            +numberInput('age')
        .grid.2autocolumn
          h2(data-i18n='distinctive features')
          +textInput('distinctive features')
        .grid.2column
          each val in ['homeland', 'lord']
            .col.2autocolumn
              h2(data-i18n=val)
              +textInput(val)
        .grid.2column
          each val in ['culture', 'personal religion']
            .col.2autocolumn
              h2(data-i18n=val)
              +textInput(val)
        .grid.2column
          each val in ['current class', 'current home']
            .col.2autocolumn
              h2(data-i18n=val)
              +textInput(val)
        .grid.2column
          each val in ['glory this game', 'total glory']
            .col.2autocolumn
              h2(data-i18n=val)
              +numberInput(val)

  .row.character-body
    .col.grid
      .personality-traits
        .header
          h1(data-i18n='personality traits')
        .row.2autocolumn.knight
          h2(data-i18n='Chivalry Bonus[*](total=80+)')
          +textInput('chivalry bonus')
        .row.2autocolumn
          h2(data-i18n='Religious Bonus(traits all 16+)')
          +textInput('religious bonus')
        each val, key in personalityTraits
          .row.traits
            .font-weight-bold
              - const chivalryBonusIndicator = ['energetic','generous','just','merciful','modest','valorous']
              if chivalryBonusIndicator.includes(key)
                span.knight *
            +checkboxInput(`${key} check`)
            +rollButton(key)
            +numberInput(key)
            span /
            +numberInput(val)
            +rollButton(val)
            +checkboxInput(`${val} check`)
        .repeating-container
          fieldset(class='repeating_directed-trait')
            .row
                h2(data-i18n='directed trait')
                +textInput('name')
                +numberInput('trait')
                +checkboxInput(`check`)
                +repeatingRollButton('trait')
      .passions
        .header
          h1(data-i18n='passions')
        each val in ['loyalty lord', 'love family', 'hospitality', 'honor']
          .row
            +rollButton(val)
            +numberInput(val)
            +checkboxInput(`${val} check`)
        .repeating-container
          fieldset(class='repeating_passion')
            .row
              +textInput('name')
              +numberInput('passion')
              +checkboxInput(`check`)
              +repeatingRollButton('passion')
      each val in ['coat of arms', 'motto']
        - const attrName = val.replace(/ /g, '_');
        .header
          h1(data-i18n=val)
        .row
          textarea(data-i18n-placeholder=val name=`attr_${attrName}` placeholder=val)
          
    .col.grid.gold-left-border
      .attributes
        .header
          h1(data-i18n='attributes')
        .row.size
          +attributeButton('size')
          +numberInput('size')
          span.font-weight-bold(data-i18n='(Knockdown)')
        each value in ['dexterity', 'strength']
          .row.2autocolumn
            +attributeButton(value)
            +numberInput(value)
        .row.constitution
          +attributeButton('constitution')
          +numberInput('constitution')
          span.font-weight-bold(data-i18n='(Major Wound)')
        .row.2autocolumn
          +attributeButton('appearance')
          +numberInput('appearance')
        .row.damage
          +damageButton('damage')
          span.text-center.display(name=`attr_damage`)
          span.font-weight-bold(data-i18n='d6')
        each val in ['healing rate', 'movement rate', 'total hit points', 'unconscious']
          .row.2autocolumn
            h2(data-i18n=val)
            span.text-center.display(name=`attr_${val.replace(/ /g, '_')}`)
      
      .col.grid.gold-left-border
        .skills
        .header
          h1(data-i18n='skills')
        each val in skills
          .row.col-3(class=`${val} ${classNotation}`)
            +rollButton(val)
            +numberInput(val)
            +checkboxInput(`${val} check`)
        .repeating-container
          fieldset(class='repeating_skills')
            .row
              +textInput('name')
              +numberInput('skill')
              +checkboxInput(`check`)
              +repeatingRollButton('skill')
        .squire
        .header.knight
          h1(data-i18n='squire')
        each val in ['name']
          .row.2autocolumn
            h2(data-i18n=`${val}`)
            if val === 'name'
              +textInput(`squire ${val}`)
            else
              +numberInput(`squire ${val}`)
        each val in ['age', 'first aid', 'battle', 'horsemanship']
          - const attrName = val.replace(/ /g, '_');
          .row.3autocolumn.knight
            +squireButton(val)
            label(data-i18n-title=`enter ${val}` title=`enter ${val}`)
              input(name=`attr_squire_${attrName}` placeholder='#' title=`@{squire_${attrName}}` type='number' value='')
            +checkboxInput(`squire ${val} check`)
        .repeating-container
          fieldset(class='repeating_squire_skills')
            .row
                +textInput('name')
                +numberInput('skill')
                +checkboxInput(`check`)
                +repeatingRollButton('skill')

      .col.grid.gold-left-border
        .current-hit-points
          .header
            h1(data-i18n='current hit points')
          .row
            +numberInput('current hit points')
          .row
            h2(data-i18n='wounds')
            textarea(data-i18n-placeholder='wounds' name='attr_wounds' placeholder='wounds')
          .row.chirurgery-needed
            +checkboxInput('chirurgery needed')
            h2(data-i18n='chirurgery needed')
        .combat-skills
        .header
          h1(data-i18n='combat skills')
        each val in ['battle', 'horsemanship']
          .row.col-3
            +rollButton(val)
            +numberInput(val)
            +checkboxInput(`${val} check`)
        .row
          h2.text-primary(data-i18n='weapon skills')
        each val in ['sword', 'lance', 'spear', 'dagger']
          - const classNotation = val != 'dagger' ? "knight" : "";
          .row.col-3(class=`${classNotation}`)
            +rollButton(val)
            +numberInput(val)
            +checkboxInput(`${val} check`)
        .repeating-container
          fieldset(class='repeating_combat-skills')
            .row
                +textInput('name')
                +numberInput('skill')
                +checkboxInput(`check`)
                +repeatingRollButton('skill')
        .joust-score.knight
        .header
          h1(data-i18n='joust score')
        .row.2column
          each val in ['win', 'losses']
            .col.2autocolumn
              h2(data-i18n=val)
              +numberInput(val)
        .horse
        .header
          h1(data-i18n='horses')
        .row
          h2.text-primary.knight(data-i18n='best warhorse (#1)')
        .row.2autocolumn
          h2(data-i18n='type')
          +textInput('horse type')
        .row.2column
          each val in ['damage', 'move']
            .col.2autocolumn
              if val === 'damage'
                +damageButton(`horse ${val}`, 'damage')
              else
                h2(data-i18n=val)
              +textInput(`horse ${val}`)
        .row.2column
          each val in ['armor', 'hp']
            .col.2autocolumn
              h2(data-i18n=val)
              +numberInput(`horse ${val}`)
        .row.3column
          each val in ['siz', 'con', 'dex']
            .col.2autocolumn
              h2.text-uppercase(data-i18n=`${val}`)
              +textInput(`horse ${val}`)
        .row.2autocolumn
          h2(data-i18n='breed')
          +textInput('horse breed')
        .row
          h2.text-primary(data-i18n='other horses')
        .row.other-horse
          h2(data-i18n='riding(#2)')
          +textInput('horse 2')
          h2(data-i18n='move')
          +textInput('horse 2 move')
        .row.other-horse
          h2.knight(data-i18n='squire(#3)')
          +textInput('horse 3')
          h2(data-i18n='move')
          +textInput('horse 3 move')
        .row.other-horse
          h2(data-i18n='(#4)')
          +textInput('horse 4')
          h2(data-i18n='move')
          +textInput('horse 4 move')
        .repeating-container
          fieldset(class='repeating_horses')
            .row
                +textInput('horse')
                h2(data-i18n='move')
                +textInput('horse move')

      .equipment-carried
      .header
        h1(data-i18n='equipment carried')
      .row.armor.knight
        h2(data-i18n='armor type')
        +textInput('armor type')
        h2(data-i18n='points')
        +numberInput('armor points')
      .row.clothing
        h2(data-i18n='clothing')
        +textInput('clothing')
        h2(data-i18n='libra value')
        +textInput('libra value')
      .row
        h2.text-primary(data-i18n='gear')
      each val in ['personal', 'travel', 'war']
        - const classNotation = val === 'war' ? "knight" : "";
        .row.gear(class=classNotation)
          +checkboxInput(`${val} gear check`)
          h2(data-i18n=`${val}`)
          +textInput(`${val} gear`)
          h2(data-i18n=`on horse #`)
          +numberInput(`${val} gear on horse`)
      .repeating-container
        fieldset(class='repeating_equipment-carried')
          .row
              +textInput('equipment')