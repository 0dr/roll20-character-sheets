.grid.header-body.applicable-skill-sets(id='applicable-skills-pc').border
		.section-header
			h1(data-i18n='applicable skill sets' data-i18n-title='applicable skill sets') applicable skill sets
		.grid.section-body.border

		
			//.main-container
				.grid.section-skill-col
					each val, key in skills1
						+skill(val, key)
			//.main-container
				.grid.section-skill-col
					each val, key in skills2
						+skill(val, key)
			//.main-container
				.grid.section-skill-col
					each val, key in skills3
						+skill(val, key)
					each val, key in skills4
						+skillunnatural(val, key)
					.repeating-container-title.border-bottom
						h3.margin-left(data-i18n='foriegn languages and other skills:' data-i18n-title='foriegn languages and other skills:') foriegn languages and other skills:
							.horz-line
					.repeating-container.border-bottom
						fieldset.repeating_skills
							.grid.section-repeating.border-bottom
								label.styled-checkbox.center-items(data-i18n-title='skill fail checkbox' title='skill fail checkbox')
									input(name='attr_fail' title='@{repeating_skills_${x}_fail}' type='checkbox')
								.form-skill-group 
									label.skill-button
										input(type='hidden' class='edit_test' name='attr_test')
										span.edit_text
											input(style='width:100%;'  name='attr_name' title='@{repeating_skills_${x}__name}' type='text' value='skill' )
										span.unedit_text
											- const skillRollValue = `@{gm_toggle} &{template:rolls} {{header=@{name}}} {{subheader=@{rank}}}  {{modifier=[[?{Modifier|,0|+20%,20|+40%,40|-20%,-20|-40%,-40|custom (%),?{custom (%)}}]]}}  {{rating=[[@{rank}+?{Modifier|,0|+20%,20|+40%,40|-20%,-20|-40%,-40|custom (%),?{custom (%)}}]]}} {{dice=[[1d100]]}}`;
											- const skillrollName = `skill`;
											+editablebetterbutton_rep(skillrollName,'','pressable additional_div',`(${val}%)`,true)
					
											//button.pressable(data-i18n-title='skill_roll' type='roll' value=skillRollValue)
												div.additional_div
													h3
														span(name='attr_name' )
									label.switch-edit
										input(type='checkbox' name='attr_test' value='editable')
										span.vslider
								.vert-line
								label.rank(data-i18n-title='skill rank' title='skill rank' )
									input(data-i18n-placeholder='0' name='attr_rank' title='@{repeating_skills_${x}_rank}' placeholder='0' type='text' value='')
			
			.skill-container.border-bottom
				each val, key in skills1
					.section-skill-col
						+pcskill(val, key,false)
				each val, key in skills2
					.section-skill-col
						+pcskill(val, key,false)
				each val, key in skills3
					.section-skill-col
						+pcskill(val, key,false)
				.section-skill-col
					+pcskill(0, 'unnatural',false)
				.section-repeating-container
					.section-title.border-bottom
						h3.margin-left(data-i18n='foriegn languages and other skills:' data-i18n-title='foriegn languages and other skills:') foriegn languages and other skills:	
					.section-body
						fieldset.repeating_skills
							.section-skill-col
								.box
									label.styled-checkbox.center-items(data-i18n-title=caps + ' fail checkbox' title=caps + ' fail checkbox')
											input(name='attr_fail' title='@{' + attr + '_fail}' type='checkbox')
									.form-skill-group 
										label.skill-button
											input(type='hidden' class='edit_test' name='attr_test')
											span.edit_text
												input(style='width:100%;'  name='attr_name' title='@{repeating_skills_${x}__name}' type='text' value='skill' )
											span.unedit_text
												- const pskillrollName = `skill`;
												+editablebetterbutton_rep(pskillrollName,'','pressable additional_div',`(${val}%)`,true)
										label.switch-edit
											input(type='checkbox' name='attr_test' value='editable')
											span.vslider
								label.rank(data-i18n-title='skill rank' title='skill rank' )
									input(data-i18n-placeholder='0' name='attr_rank' title='@{repeating_skills_${x}_rank}' placeholder='0' type='text' value='')

			.section-directions.center.updateinfo 
				.subgrid
					span(data-i18n='Check a box when you attempt to use a skill and fail. After the session, add 1d4 to each checked skill and erase all checks.') Check a box when you attempt to use a skill and fail. After the session, add 1d4 to each checked skill and erase all checks.
					button.lvl(name='act_levelup' type='action')
						h3.lvlup Q
				.othergrid
					input(type='checkbox')
					span
					.summary
						fieldset.repeating_summary
							.section-summary
								span.item1( name='attr_skillname')
								span.item2(style='color:red;' name='attr_oldval')
								span.item3.slash â†’
								span.item4(style='color:green;' name='attr_newval')
