each levelObject, level in data
    datalist(id=`${level}-spells`)
        each spell, spellName in levelObject
            if spellName.includes('Reverse of')
                - continue

            - label = [spell.category]
            if spell.book !== 'PHB'
                - label.push(spell.book)
            if level.endsWith('monster')
                - let displayLevel
                case spell.level
                    when '1': - displayLevel = `1st level`
                    when '2': - displayLevel = `2nd level`
                    when '3': - displayLevel = `3rd level`
                    when 'q': - displayLevel = `Quest Spell`
                    default:  - displayLevel = `${spell.level}th level`
                - label.unshift(displayLevel)
            option(value!=spellName)= label.filter(Boolean).join(', ')
            if spell.reversible
                option(value!=`${spell.reversible} (Reverse of ${spellName})`)= label.filter(Boolean).join(', ')

each levelObject, level in data
    datalist(id=`${level}-spells-ff`)
        each spell, spellName in levelObject
            if spellName.includes('Reverse of')
                - continue
            option(value!=spellName)
            if spell.reversible
                option(value!=`${spell.reversible} (Reverse of ${spellName})`)