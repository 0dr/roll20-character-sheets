include ../moves/mixins/move-builder

mixin oracleLabel(type, name, id)
  label.toggle-btn.oracle-btn
    input.hide-element.btn-input(
      type='radio'
      title=`@{oracle_${type}_button}`
      name=`attr_oracle_${type}_button`
      value=id
    )
    .btn-content.oracle-name=header

mixin oracleRowBuilder(table, row, index)
  - const initChance = (index === 0) ? row.Chance - (row.Chance - 1) : table[index - 1].Chance + 1
  - const finalChance = row.Chance
  - const range = (initChance === finalChance) ? finalChance : `${initChance}-${finalChance}`
  -
    let detailsKeys = ["Assets", "Details"];
    let detailsStrings = [];
    detailsKeys.forEach(key => {
      if (row[key]) {
        if (key === "Assets") {
          row[key] = row[key].map(item => item.toUpperCase());
        }
        detailsStrings.push(row[key])
      };
    });
    let detailString;
    if (detailsStrings.length > 0) {
      detailsStrings = detailsStrings.flat(2);
      detailString = `(${detailsStrings.join(", ")})`;
    }

  - const result = `${row.Description}${detailString ? " " + detailString : ""}`
  tr.oracle-row
    td.oracle-roll=range
    td.oracle-result=result

mixin oracleRollGroup(group)
  //- TODO: implement as details/summary?
  .oracle-box
    .oracle-title=group.Name
    each oracle in group.Oracles
      - const header = `${group.Name} - ${oracle.Name}`
      .oracle
        if (oracle.Tables)
          - let buttonLabel = oracle.Name
          +oracleButtonMultiTables(oracle.id, buttonLabel, oracle.Tables)
        else
          +oracleButton(oracle.id, oracle.Name)
    if group.Subcategories
      each subCategory in group.Subcategories
        - const buttonLabel = subCategory.Name||subCategory['Display name']
        //- TODO: add &blacktriangleright; in styling rather than raw text
        .oracle.oracle-subcategory
          +oracleButtonMultiTables(subCategory.id, buttonLabel, subCategory.Oracles)

mixin oracleButtonSingleTable(id, buttonLabel)
  +oracleButton(id, buttonLabel)

mixin oracleButtonMultiTables(id, buttonLabel, tables, indexOffset=0)
  //- indexOffset is to handle subtables within subcategories
  -
    let counter = 0;
    let options = [];
    tables.forEach((oracle) => {
      if (oracle.Tables) {
        oracle.Tables.forEach(subtable => {
          let tableLabel = subtable['Display name']||subtable['Name'];
          options.push(`${tableLabel},${counter}`);
          counter++;
        })
      }
      else {
        let tableLabel = oracle['Display name']||oracle['Name'];
        options.push(`${tableLabel},${counter}`);
        counter++;
      }
    })
  - const rollQuery = `{{tableChoice=[[(?{Choose Table|${options.join('|')}})]] header=[[(?{Choose Table})]]}} `
  +oracleButton(id, buttonLabel, rollQuery)

mixin oracleButton(id, buttonLabel, rollQuery="")
  //- generates CSS
  //- - console.log(`input[type=radio].${id}:checked ~ div.${id},`)
  -
    let valueString = `&{template:starforged_oracles} ${rollQuery} {{${id}=[[d100]]}}`;
    if (!rollQuery.match(/header=/i)) {
      valueString = valueString + " " +  `{{header=${buttonLabel}}}`
    }
  .button-container
    button(
      type='roll'
      class='oracle-roll'
      title=`@{roll_${id}}`
      name=`roll_${id}`
      value=valueString
    )
  label.toggle-btn.oracle-btn
    input.hide-element.btn-input(
      type='radio'
      title=`@{selected_oracle}`
      name=`attr_selected_oracle`
      value=id
    )
    .btn-content.oracle-name=buttonLabel

mixin oracleTableBuilder(oracle, titleText)
  table.oracle-table.oracle-table-preview
    thead
      th.oracle-title.oracle-table-preview(colspan=2)=titleText
    each row, index in oracle.Table
      +oracleRowBuilder(oracle.Table, row, index)

mixin oracleSubTableBuilder(subtable, subtitleText)
  table.oracle-table.oracle-subtable
    thead
      th.oracle-subtitle(colspan=2)=subtitleText
    each row, index in subtable.Table
      +oracleRowBuilder(subtable.Table, row, index)

mixin oracleBuilder(oracle, groupName)
  //- - console.log("oraclebuilder in", groupName)
  input(class=`${oracle.id} hide-element` type='radio' name=`attr_oracle_preview` value=oracle.id)
  div(class=`${oracle.id} showhide`)
    if oracle.Table
      +oracleTableBuilder(oracle, `${groupName} - ${oracle.Name}`)
    else if oracle.Tables
      .oracle-title.oracle-table-preview=`${groupName} - ${oracle.Name}`
      each subtable, index in oracle.Tables
        +oracleSubTableBuilder(subtable, subtable['Display name'])
    else if oracle.Oracles
      .oracle-title.oracle-table-preview=`${groupName} - ${oracle.Name}`
      each subCatOracle, index in oracle.Oracles
        if subCatOracle.Table
          +oracleSubTableBuilder(subCatOracle, subCatOracle['Display name']||subCatOracle['Name'])
        else if subCatOracle.Tables
          each subtable, index in subCatOracle.Tables
            +oracleSubTableBuilder(subtable, subtable['Display name']||subtable['Name'])

        //- - console.log("NYI: found subcategories", oracle.Oracles.map(str => str.Name).join(", ") )