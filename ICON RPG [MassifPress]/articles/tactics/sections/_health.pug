#stats.half-gap.boxed.well-padded
  span(class='center')
    h3(data-i18n='hp')
    .flex-box.center
      +hidden({name:'bloodied', class:'bloodied-control', trigger:{calculation:'calcBloodied'}, type:'number'})
      +input({name:'hp', class:'underlined bloodied-receiver bigger', trigger:{affects:['bloodied']}, type:'number'})
      +number({name:'hp_max', class:'bigger', value:'24', readonly:true, trigger:{calculation:['calcHP']}})
  span(class='center')
    //- +roller({name:'saving throw', role:'heading', 'aria-level':4,'data-i18n':'saving throw', trigger:{listenerFunc:'rollGeneric'}})
    +button({name:'save', type:'roll', role:'heading', 'aria-level':4,'data-i18n':'save',
      value:'&{template:icon} {{name=save}} {{character_name=@{character_name}}} {{roll=[[1d20?{Boons / Curses|NA,+0|+2D,+2d6kh1|+1D,+1d6|−1D,-1d6|−2D,-2d6kh1}]]}} {{target=@{save_target}}}'
    })
  span(class='center span-2')
    +input-label({label:'wounds',
      inputObj:{name:'wounds', class:'underlined', type:'number', value:'0', readonly:true, trigger:{affects:['hp_max','vigor_max']}},
      spanObj:{role:'heading', class:'smallcaps bigger', 'aria-level':5}
    })
    .flex-box.center
      +fillLeft({
        radioObj:{name:'wounds'},
        divObj:{class:'wound-radio span-2'},
        valueArray:[0,1,2,3,4]
      })
    p(class='center bold', 'data-i18n'="rules reminder wounds")