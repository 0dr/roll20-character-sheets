@use 'mixins/scss/_mixinsandplaceholders';

.input-label {
  width: auto;
}

label.input-label .numb-label {
  width: 80px;
}

input.burden {
  width: 150px !important;
  text-align: center;
  align-items: center;
}

input.burden-penalty {
  position: relative;
  left: -10px;
  width: 120px !important;
  text-align: left;
  align-items: right;
}

p.burden-penalty {
  position:relative;
  left: -10px;
  top: 6px;
}

p.dust {
  color: var(--orange) !important;
  padding: 5px !important;
}

input.dust {
  height: 40px !important;
  width: 100% !important;
  font-size: 1.4rem !important;
}

.color-receiver {
  background-color: var(--magenta);
  // fallback color, for if the hidden 'color-control' input is not placed before the selector
}

select.color-receiver {
  color: var(--off-white);
  border-radius: 0px !important;
}

.color-control[value=general] ~ .color-receiver {
  background-color: var(--purple) !important;
}
.color-control[value=stalwart] ~ .color-receiver {
  background-color: var(--red) !important;
}
.color-control[value=vagabond] ~ .color-receiver {
  background-color: var(--yellow) !important;
}
.color-control[value=mendicant] ~ .color-receiver {
  background-color: var(--green) !important;
}
.color-control[value=wright] ~ .color-receiver {
  background-color: var(--blue) !important;
}
.color-control[value=npc] ~ .color-receiver {
  background-color: var(--grey) !important;
}